//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace FavMovies.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	internal static class PersistenceInfoProviderSingleton
	{
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton() {	}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance() { return _providerInstance; }
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitMovieEntityMappings();
			InitMovieinfoEntityMappings();
		}

		/// <summary>Inits MovieEntity's mappings</summary>
		private void InitMovieEntityMappings()
		{
			this.AddElementMapping("MovieEntity", @"FavMovies", @"public", "movie", 2, 0);
			this.AddElementFieldMapping("MovieEntity", "Id", "id", false, "Integer", 0, 10, 0, true, "public.movie_id_seq", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("MovieEntity", "MovieName", "movie_name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits MovieinfoEntity's mappings</summary>
		private void InitMovieinfoEntityMappings()
		{
			this.AddElementMapping("MovieinfoEntity", @"FavMovies", @"public", "movieinfo", 4, 0);
			this.AddElementFieldMapping("MovieinfoEntity", "Director", "director", true, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("MovieinfoEntity", "Genre", "genre", true, "Varchar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("MovieinfoEntity", "Id", "id", false, "Integer", 0, 10, 0, true, "public.movieinfo_id_seq", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("MovieinfoEntity", "MovieId", "movie_id", false, "Integer", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
		}

	}
}
